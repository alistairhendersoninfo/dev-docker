version: '3.8'

services:
  n8n:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: n8n-automation
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      # Basic n8n configuration
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://n8n-local.alistairhenderson.info:5678
      - N8N_EDITOR_BASE_URL=http://n8n-local.alistairhenderson.info:5678
      
      # Database configuration (using PostgreSQL)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_password
      
      # Security and development settings
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=true
      - N8N_LOG_LEVEL=debug
      - N8N_METRICS=true
      
      # Container management integration
      - DOCKER_HOST=unix:///var/run/docker.sock
      - N8N_CUSTOM_EXTENSIONS=/home/node/.n8n/custom
      
    volumes:
      # Persistent data
      - n8n_data:/home/node/.n8n
      
      # Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock
      
      # Custom workflows and configurations
      - ./workflows:/home/node/.n8n/workflows
      - ./custom:/home/node/.n8n/custom
      
      # SSH keys for remote server access
      - ~/.ssh:/home/node/.ssh:ro
      
    networks:
      - n8n-network
      - traefik-network
    
    labels:
      # Traefik configuration
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n-local.alistairhenderson.info`)"
      - "traefik.http.routers.n8n.entrypoints=web"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.docker.network=traefik-network"
    
    depends_on:
      - postgres
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - n8n-network
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local

networks:
  n8n-network:
    driver: bridge
  traefik-network:
    external: true
